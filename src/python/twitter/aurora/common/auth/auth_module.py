from abc import abstractmethod, abstractproperty

import getpass
import time

from twitter.common.lang import Interface

from gen.twitter.aurora.ttypes import SessionKey


class AuthModule(Interface):
  @abstractproperty
  def mechanism(self):
    """Return the mechanism provided by this AuthModule."""

  @abstractmethod
  def payload(self):
    """Return the payload generated by the AuthModule."""

  def __call__(self):
    return SessionKey(mechanism=self.mechanism, data=self.payload())


class InsecureAuthModule(AuthModule):
  @property
  def mechanism(self):
    return 'UNAUTHENTICATED'

  def payload(self):
    return 'UNAUTHENTICATED'
